const cekHariKerja = (day) => {
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            const dataDay = ['senin', 'selasa', 'rabu', 'kamis', 'jumat']
            let cek = dataDay.find((item) => {
                return item === day
            })
            if (cek) {
                resolve (cek)
            } else {
                reject(new Error('Hari ini bukan hari kerja'))
            }
    
        }, 3000)
    })
}

cekHariKerja('minggu').then((day) => {
    console.log (`${day} adalah hari kerja`)
}).catch((error) => {
    console.log(error)
}).finally(()=> {
    console.log('Proses telah selesai')
})


const cekHari = async (hari) => {
    const hariCek = hari.toLowerCase()
    const day = ['senin', 'selasa', 'rabu', 'kamis', 'jumat', 'sabtu', 'minggu']
    
    if (hariCek !== day.find((item) => item == hariCek) ) {
        console.log('masukkan hari!')
    } else {
        try {
            const result = await cekHariKerja(hariCek)
                console.log (`${result} adalah hari kerja`)
            } catch (error) {
                console.log (error)
            } finally {
                console.log('Proses telah selesai')
            }
    }
    }

cekHari('rabu')


/* 
    * then catch & try catch merupakan sebuah properti yang sama-sama berfungsi sebagai error handling.
    * then & try akan menangkap hasil resolve, sedangkan catch akan menangkap hasil reject.
    * perbedaan antara then catch dengan try catch bisa dilihat dari penggunaannya. try catch digunakan ketika kode yang dibuat menggunakan async/await, sedangkan then catch ketika kita membuat kode tanpa menggunakan async/await.
    * sedangkan finally, merupakan sebuah kode yang dijalankan untuk menunjukkan bahwa blok kode sudah dieksekusi walaupun kode yang dibuat ada kesalahan ataupun tidak.
*/
